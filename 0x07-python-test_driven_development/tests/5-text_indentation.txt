# Module: `5-text_indentation`
# Run: python3 -m doctest -v ./tests/5-text_indentation.txt  | tail -2
============================

Testing `print_square` Function
-------------------------------

Importing function from module:

    >>> text_indentation = __import__('5-text_indentation').text_indentation

Printing word with spaces

    >>> text_indentation("    Lorem     ")
    Lorem

Printing a paragraph

    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Printing special characters

    >>> text_indentation(".?:")
    .
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>

Printing word with spaces and special characters

    >>> text_indentation("    Lorem    .")
    Lorem.
    <BLANKLINE>

Printing strings with special chars

    >>> text_indentation("ALX: Best? Software-Engineering. School , 2023  ")
    ALX:
    <BLANKLINE>
    Best?
    <BLANKLINE>
    Software-Engineering.
    <BLANKLINE>
    School , 2023

Passing empty string

    >>> text_indentation('    ')

Passing int as character

    >>> text_indentation('10')
    10

Passing new line character \n

    >>> text_indentation('\n')
    <BLANKLINE>

Passing system special chars

    >>> text_indentation('\n.\n?\n:')
    <BLANKLINE>
    .
    <BLANKLINE>
    <BLANKLINE>
    ?
    <BLANKLINE>
    <BLANKLINE>
    :
    <BLANKLINE>

Passing None

    >>> text_indentation(None)
    Traceback (most recent call last):
    	      ...
    TypeError: text must be a string

Passing number:
     >>> text_indentation(90)
     Traceback (most recent call last):
     ...
     TypeError: text must be a string

     >>> text_indentation(-90)
     Traceback (most recent call last):
     ...
     TypeError: text must be a string

